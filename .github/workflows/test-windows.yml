---
name: Windows Tests

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]

permissions:
  contents: read

jobs:
  test-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npm run format:check
        continue-on-error: true

      - name: Run linting
        run: npm run lint
        continue-on-error: true

      - name: Build TypeScript
        run: npm run build

      - name: Run Jest tests
        run: npm test

      - name: Run Windows security check tests
        run: |
          powershell.exe -ExecutionPolicy Bypass -File `
            scripts/testing/test-windows.ps1 -Quiet
        env:
          CI: true
          TESTING_MODE: non-interactive

      - name: Build pkg executable for Windows
        run: npm run pkg:windows

      - name: Test pkg executable - Help command
        run: ./bin/index-win.exe --help

      - name: Test pkg executable - Version command
        run: ./bin/index-win.exe --version

      - name: Test pkg executable - Check help command
        run: ./bin/index-win.exe check --help

      - name: Test pkg executable - Basic check (non-interactive)
        run: |
          # Run with timeout, allow failure since security checks may fail in CI
          timeout /t 30 /nobreak > nul & `
            ./bin/index-win.exe check relaxed --quiet
        env:
          CI: true
        continue-on-error: true

      - name: Test global npm install and uninstall
        run: |
          # Test global install
          npm pack
          $packageFile = Get-ChildItem -Name "*.tgz"
          npm install -g $packageFile

          # Test globally installed command
          eai-security-check --help
          eai-security-check --version
          eai-security-check check --help

          # Test basic security check (allow failure in CI)
          Start-Process -FilePath "eai-security-check" `
            -ArgumentList "check", "relaxed", "--quiet" `
            -Wait -NoNewWindow -PassThru | Out-Null

          # Clean up
          npm uninstall -g eai-security-check
          Remove-Item -Path "*.tgz" -Force
        env:
          CI: true
        continue-on-error: true

      - name: Test application's global install functionality
        run: |
          # Build and prepare the application
          npm run build

          # Test the application's own global install command
          Write-Host "Testing eai-security-check install command..."
          node dist/cli/index.js install

          # Verify global installation created correct directories
          Write-Host "Verifying installation directories..."
          if (-not (Test-Path "C:\Program Files\eai-security-check")) {
            Write-Host "❌ Target directory not created"
            exit 1
          }

          # Test that globally installed command works
          Write-Host "Testing globally installed command..."
          & "C:\Program Files\eai-security-check\eai-security-check.exe" `
            --help
          & "C:\Program Files\eai-security-check\eai-security-check.exe" `
            --version
          & "C:\Program Files\eai-security-check\eai-security-check.exe" `
            check --help

          # Test basic security check with global install (allow failure)
          try {
            Start-Process `
              -FilePath `
              "C:\Program Files\eai-security-check\eai-security-check.exe" `
              -ArgumentList "check", "relaxed", "--quiet" `
              -Wait -NoNewWindow -PassThru | Out-Null
          } catch {
            Write-Host "Security check failed (expected in CI)"
          }

          # Test the application's own uninstall command
          Write-Host "Testing eai-security-check uninstall command..."
          & "C:\Program Files\eai-security-check\eai-security-check.exe" `
            uninstall

          # Verify uninstallation cleaned up correctly
          Write-Host "Verifying uninstallation cleanup..."
          
          # Directory should still exist (preserves config/reports/logs)
          if (-not (Test-Path "C:\Program Files\eai-security-check")) {
            Write-Host "❌ Installation directory was completely removed (should preserve config)"
            exit 1
          }
          
          # But main executable should be removed (though directory structure remains)
          Write-Host "✅ Installation directory preserved for config files"

          Write-Host "✅ Application global install/uninstall functionality " `
            "works correctly"
        env:
          CI: true
        continue-on-error: true

      - name: Upload pkg artifact
        uses: actions/upload-artifact@v4
        with:
          name: eai-security-check-windows
          path: bin/index-win.exe
          retention-days: 7
