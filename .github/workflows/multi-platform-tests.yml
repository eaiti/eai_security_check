---
name: Multi-Platform Tests

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]

permissions:
  contents: read

jobs:
  test-all-platforms:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            test-script: scripts/testing/test-linux.sh
            pkg-target: pkg:linux
            binary-name: index-linux
          - os: macos-latest
            platform: macos
            test-script: scripts/testing/test-macos.sh
            pkg-target: pkg:macos
            binary-name: index-macos
          - os: windows-latest
            platform: windows
            test-script: scripts/testing/test-windows.ps1
            pkg-target: pkg:windows
            binary-name: index-win.exe

    runs-on: ${{ matrix.os }}
    name: Test on ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build TypeScript
        run: npm run build

      - name: Run Jest tests
        run: npm test

      - name: Run platform-specific security check tests (Linux/macOS)
        if: matrix.platform != 'windows'
        run: |
          chmod +x ${{ matrix.test-script }}
          ${{ matrix.test-script }}
        env:
          CI: true
          TESTING_MODE: non-interactive

      - name: Run platform-specific security check tests (Windows)
        if: matrix.platform == 'windows'
        run: |
          powershell.exe -ExecutionPolicy Bypass -File ${{ matrix.test-script }} -Quiet
        env:
          CI: true
          TESTING_MODE: non-interactive

      - name: Build pkg executable
        run: npm run ${{ matrix.pkg-target }}

      - name: Test pkg executable - Help command (Linux/macOS)
        if: matrix.platform != 'windows'
        run: |
          chmod +x bin/${{ matrix.binary-name }}
          ./bin/${{ matrix.binary-name }} --help

      - name: Test pkg executable - Help command (Windows)
        if: matrix.platform == 'windows'
        run: ./bin/${{ matrix.binary-name }} --help

      - name: Test pkg executable - Version command
        run: ./bin/${{ matrix.binary-name }} --version

      - name: Test pkg executable - Check help command
        run: ./bin/${{ matrix.binary-name }} check --help

      - name: Test pkg executable - Basic check (Linux/macOS)
        if: matrix.platform != 'windows'
        run: |
          timeout 30s ./bin/${{ matrix.binary-name }} check --profile=relaxed --quiet || true
        env:
          CI: true

      - name: Test pkg executable - Basic check (Windows)
        if: matrix.platform == 'windows'
        run: |
          # Run with timeout and allow failure since security checks may fail in CI
          timeout /t 30 /nobreak > nul & ./bin/${{ matrix.binary-name }} check --profile=relaxed --quiet
        env:
          CI: true
        continue-on-error: true

      - name: Test global npm install and uninstall (Linux/macOS)
        if: matrix.platform != 'windows'
        run: |
          # Test global install 
          npm pack
          PACKAGE_FILE=$(ls *.tgz)
          npm install -g "$PACKAGE_FILE"
          
          # Test globally installed command
          eai-security-check --help
          eai-security-check --version
          eai-security-check check --help
          
          # Test basic security check (allow failure in CI)
          timeout 30s eai-security-check check --profile=relaxed --quiet || true
          
          # Clean up
          npm uninstall -g eai-security-check
          rm -f *.tgz
        env:
          CI: true

      - name: Test global npm install and uninstall (Windows)
        if: matrix.platform == 'windows'
        run: |
          # Test global install 
          npm pack
          $packageFile = Get-ChildItem -Name "*.tgz"
          npm install -g $packageFile
          
          # Test globally installed command
          eai-security-check --help
          eai-security-check --version
          eai-security-check check --help
          
          # Test basic security check (allow failure in CI)
          Start-Process -FilePath "eai-security-check" -ArgumentList "check", "--profile=relaxed", "--quiet" -Wait -NoNewWindow -PassThru | Out-Null
          
          # Clean up
          npm uninstall -g eai-security-check
          Remove-Item -Path "*.tgz" -Force
        env:
          CI: true
        continue-on-error: true

      - name: Upload pkg artifact
        uses: actions/upload-artifact@v4
        with:
          name: eai-security-check-${{ matrix.platform }}
          path: bin/${{ matrix.binary-name }}
          retention-days: 7

  # Summary job that depends on all platform tests
  test-summary:
    needs: test-all-platforms
    runs-on: ubuntu-latest
    name: Multi-Platform Test Summary

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List all built executables
        run: |
          echo "âœ… Successfully built and tested executables for all platforms:"
          find artifacts -name "*" -type f -executable -o -name "*.exe" | sort
          echo ""
          echo "ðŸ“Š Artifact sizes:"
          find artifacts -name "*" -type f \( -executable -o -name "*.exe" \) -exec ls -lh {} \;

      - name: Test Summary
        run: |
          echo "ðŸŽ‰ Multi-platform testing completed successfully!"
          echo "âœ… All platforms (Linux, macOS, Windows) passed their tests"
          echo "âœ… All pkg executables built and tested successfully"
          echo "âœ… All basic CLI commands (help, version, profiles, check) work correctly"